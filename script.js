// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web Apps
const tg = window.Telegram.WebApp;
tg.ready();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Telegram Web App API
if (!window.Telegram || !window.Telegram.WebApp) {
    console.error("Telegram Web App API –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω");
} else {
    console.log("Telegram Web App API —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω");
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let userData = {
    height: 0,
    weight: 0,
    goal: '',
    allergies: [],
    points: 0,
    achievements: [],
    water: 0,
    steps: 0,
    weightHistory: [70] // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
};

// Onboarding
const onboarding = document.getElementById('onboarding');
const mainApp = document.getElementById('main-app');
const onboardingForm = document.getElementById('onboarding-form');

// –°–±—Ä–æ—Å–∏–º localStorage –¥–ª—è —Ç–µ—Å—Ç–∞
// localStorage.removeItem('onboardingCompleted');

if (!localStorage.getItem('onboardingCompleted')) {
    onboarding.classList.remove('hidden');
} else {
    mainApp.classList.remove('hidden');
}

onboardingForm.addEventListener('submit', (e) => {
    e.preventDefault();
    userData.height = document.getElementById('height').value;
    userData.weight = document.getElementById('weight').value;
    userData.goal = document.getElementById('goal').value;
    userData.allergies = Array.from(document.querySelectorAll('input[name="allergy"]:checked')).map(input => input.value);

    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É
    showSlide(3);
});

function showSlide(slideNumber) {
    document.querySelectorAll('.onboarding-slide').forEach(slide => slide.classList.remove('active'));
    document.querySelectorAll('.onboarding-dots .dot').forEach(dot => dot.classList.remove('active'));
    document.querySelector(`.onboarding-slide[data-slide="${slideNumber}"]`).classList.add('active');
    document.querySelector(`.onboarding-dots .dot[data-dot="${slideNumber}"]`).classList.add('active');
}

function completeOnboarding() {
    localStorage.setItem('onboardingCompleted', 'true');
    onboarding.classList.add('hidden');
    mainApp.classList.remove('hidden');
    calculateCalories();
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º
function toggleTheme() {
    const body = document.body;
    if (body.classList.contains('dark-theme')) {
        body.classList.remove('dark-theme');
        body.classList.add('light-theme');
        document.getElementById('theme-toggle-btn').textContent = 'üåô';
    } else {
        body.classList.remove('light-theme');
        body.classList.add('dark-theme');
        document.getElementById('theme-toggle-btn').textContent = '‚òÄÔ∏è';
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
function showTab(tabId) {
    document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
    document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
    document.querySelectorAll('.bottom-nav button').forEach(btn => btn.classList.remove('active'));
    document.getElementById(tabId).classList.add('active');
    document.querySelector(`.tabs button[onclick="showTab('${tabId}')"]`).classList.add('active');
    document.querySelector(`.bottom-nav button[onclick="showTab('${tabId}')"]`).classList.add('active');
}

// –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è
function addPoints(points) {
    userData.points += points;
    document.getElementById('user-points').textContent = userData.points;
    checkAchievements();
}

function checkAchievements() {
    if (userData.points >= 50 && !userData.achievements.includes('50_points')) {
        userData.achievements.push('50_points');
        tg.showAlert('–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: 50 –±–∞–ª–ª–æ–≤!');
    }
    if (userData.water >= 2 && !userData.achievements.includes('water_goal')) {
        userData.achievements.push('water_goal');
        tg.showAlert('–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: –¶–µ–ª—å –ø–æ –≤–æ–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!');
    }
    document.getElementById('user-achievements').textContent = `${userData.achievements.length}/5`;
}

function markMealCompleted(button) {
    button.disabled = true;
    button.textContent = '–°—ä–µ–¥–µ–Ω–æ';
    addPoints(10);
}

// –†–∞—Å—á—ë—Ç –∫–∞–ª–æ—Ä–∏–π (—Ñ–æ—Ä–º—É–ª–∞ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞)
function calculateCalories() {
    const weight = parseFloat(userData.weight);
    const height = parseFloat(userData.height);
    const age = 30; // –ü—Ä–∏–º–µ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ onboarding
    const bmr = 10 * weight + 6.25 * height - 5 * age + 5; // –î–ª—è –º—É–∂—á–∏–Ω
    const dailyCalories = bmr * 1.2; // –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: –Ω–∏–∑–∫–∏–π
    document.getElementById('calories').textContent = `0 / ${Math.round(dailyCalories)} –∫–∫–∞–ª`;
    document.getElementById('macros').textContent = `–ë: ${Math.round(dailyCalories * 0.3 / 4)}–≥ –ñ: ${Math.round(dailyCalories * 0.3 / 9)}–≥ –£: ${Math.round(dailyCalories * 0.4 / 4)}–≥`;
}

// –†–µ—Ü–µ–ø—Ç—ã
function showRecipeDetails() {
    document.getElementById('recipes').innerHTML = `
        <h2>–ö—É—Ä–∏–Ω—ã–π —Å—É–ø</h2>
        <div class="placeholder">Placeholder (–≤–∏–¥–µ–æ)</div>
        <p>–®–∞–≥ 1: –ù–∞—Ä–µ–∂—å –æ–≤–æ—â–∏.<br>–®–∞–≥ 2: –°–≤–∞—Ä–∏ –±—É–ª—å–æ–Ω.<br>–®–∞–≥ 3: –î–æ–±–∞–≤—å –∫—É—Ä–∏—Ü—É.</p>
        <button onclick="showTab('recipes')">–ù–∞–∑–∞–¥</button>
    `;
}

function addRecipe() {
    const recipeName = prompt('–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞:');
    const recipeSteps = prompt('–®–∞–≥–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è (—Ä–∞–∑–¥–µ–ª—è–π –ø–µ—Ä–µ–Ω–æ—Å–æ–º —Å—Ç—Ä–æ–∫–∏):');
    if (recipeName && recipeSteps) {
        const recipeCard = document.createElement('div');
        recipeCard.className = 'recipe-card';
        recipeCard.innerHTML = `
            <div class="placeholder">Placeholder</div>
            <h3>${recipeName}</h3>
            <p>${recipeSteps.replace(/\n/g, '<br>')}</p>
            <button onclick="showRecipeDetails()">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
        `;
        document.getElementById('recipes').prepend(recipeCard);
    }
}

// –ü—Ä–æ–≥—Ä–µ—Å—Å
function addWater() {
    userData.water += 0.25; // 250 –º–ª –∑–∞ —Å—Ç–∞–∫–∞–Ω
    document.getElementById('water').textContent = `${userData.water} / 2 –ª`;
    checkAchievements();
}

// –ì—Ä–∞—Ñ–∏–∫ –≤–µ—Å–∞
const ctx = document.getElementById('weight-chart').getContext('2d');
new Chart(ctx, {
    type: 'line',
    data: {
        labels: ['–î–µ–Ω—å 1', '–î–µ–Ω—å 2', '–î–µ–Ω—å 3'],
        datasets: [{
            label: '–í–µ—Å (–∫–≥)',
            data: userData.weightHistory,
            borderColor: '#007aff',
            fill: false
        }]
    },
    options: {
        scales: {
            y: {
                beginAtZero: false
            }
        }
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if (localStorage.getItem('onboardingCompleted')) {
    calculateCalories();
    showTab('today');
}
